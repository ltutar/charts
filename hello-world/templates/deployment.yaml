apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    field.cattle.io/creatorId: user-mmjg2
    field.cattle.io/publicEndpoints: '[{"addresses":["172.22.101.111"],"port":80,"protocol":"HTTP","serviceName":"levent:ingress-85ec007e04a4bbdb3dd347907b6c7b96","ingressName":"levent:hello-world-ingress","hostname":"hello-world-ingress.levent.172.22.101.111.xip.io","allNodes":true}]'
  creationTimestamp: null
  generation: 1
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-levent-hello-world
  name: hello-world
  selfLink: /apis/apps/v1/namespaces/levent/deployments/hello-world
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-levent-hello-world
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-04-02T16:02:27Z"
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-levent-hello-world
    spec:
      containers:
      - image: rancher/hello-world
        imagePullPolicy: Always
        name: hello-world
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
